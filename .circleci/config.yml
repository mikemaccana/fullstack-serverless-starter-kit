# https://circleci.com/docs/reference-2-1

# To validate, run:
# circleci config validate

# Environemnt variables configured at https://app.circleci.com/settings/project/github/mikemaccana/serverless-starter-kit/environment-variables

version: 2.1

# Useful things for node
# https://circleci.com/orbs/registry/orb/circleci/node
orbs:
  node: circleci/node@4.0.0

# Executors let us reuse these environment configs for multiple jobs (usually Docker images)
# https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-executors
executors:
  node-only:
    docker:
      # See https://circleci.com/developer/images/image/cimg/node
      - image: cimg/node:lts
  node-and-mongo:
    docker:
      # The job's actual commands will run in the first image
      - image: cimg/node:lts
      # See https://circleci.com/docs/2.0/circleci-images/#mongodb
      - image: circleci/mongo:4.4.2

        # Needed to pull down Mongo images from Docker hub
        # See https://circleci.com/docs/2.0/private-images/
        # Get from https://hub.docker.com/
        # Set up at https://app.circleci.com/pipelines/github/mikemaccana/serverless-starter-kit
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

jobs:
  install npm packages:
    executor: node-only
    steps:
      # git repository gets checked out to /home/circleci/project by default
      - checkout
      # Cache the results of npm install, if package-lock hasn't changed
      # Provided by the 'node' orb
      # See https://circleci.com/docs/2.0/orb-intro/
      - node/install-packages
      # Save the checked out project and node_modules so we can make them available to all the other jobs
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - .

  run tests:
    description: Run app's tests
    executor: node-and-mongo
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Run tests
          # Refresh apt, add the mongo v4 CLI app, make a user, run the tests
          # Official Ubuntu Mongo client is too old, produces warnings.
          # https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/
          command: |
            wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
            echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
            sudo apt update
            sudo apt install mongodb-org-shell
            mongo --eval "db.createUser({ user: "${MONGODB_USER}", pwd: "${MONGODB_PASSWORD}", roles: [ { role: "userAdminAnyDatabase", db: "${MONGODB_DATABASE}" } ] })"
            npm run test

  lint code:
    executor: node-only
    steps:
      - attach_workspace:
          at: /home/circleci/project

      - run:
          name: Lint
          command: |
            cd /home/circleci/project
            npm run lint

  run npm audit:
    executor: node-only
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Audit
          command: |
            cd /home/circleci/project
            npm audit

  compile typescript:
    executor: node-only
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - run:
          name: Compile
          command: |
            npx tsc

  
# Step 2: actually run the things we've defined above
# See https://circleci.com/docs/2.0/sample-config/#section=configuration
workflows:
  install_and_test:
    jobs:
      - install npm packages
      - lint code:
          requires:
            - install npm packages
      - run npm audit:
          requires:
            - install npm packages
      - compile typescript:
          requires:
            - install npm packages

      - run tests:
          requires:
            - install npm packages

      